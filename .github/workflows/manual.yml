# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
#
#
# 以下のサイトを参考に github action で build, netlify へ publicフォルダを転送
# https://sung.codes/blog/2019/12/25/building-gatsby-with-git-hub-actions-and-deploying-to-netlify/
# これで netlify のビルド時間を気にしなくても良いかも．素晴らしい！！
# https://docs.netlify.com/cli/get-started/#link-with-an-environment-variable
# https://docs.netlify.com/cli/get-started/#obtain-a-token-in-the-netlify-ui

name: Node.js CI + deploying to netlify

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    # ubunts の最新版を指定
    runs-on: ubuntu-latest

    # 実行する処理やコマンドを指定
    steps:
      # レポジトリからの checkout を実行
      - uses: actions/checkout@v4
      # Node のセットアップ
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          # node-version: "latest"
          node-version-file: 'package.json'
          cache: "npm"
      # Node の実行（npm install, npm run build）
      - name: Build Project
        run: |
          npm install
          npm run build
      # yarn へ変更
      # - run: yarn install
      # - run: yarn run build

      # - name: Publish using netlify
      #   uses: netlify/actions/cli@master
      #   with:
      #     args: deploy --dir=public --prod
      #   env:
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      # 確認のためのリスト表示　必要なければ削除
      - name: List output files
        run: ls -laFG

      # rsync の設定
      - name: Rsync deployments to sakura.ne.jp
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete --exclude=".well-known/" --omit-dir-times
          # switches: -rlOtcv --delete --exclude=".well-known/" --omit-dir-times　
          path: public/
          remote_path: ${{ secrets.REMOTE_PATH }}
          remote_host: ${{ secrets.REMOTE_HOST }}
          remote_user: ${{ secrets.REMOTE_USER }}
          remote_key: ${{ secrets.ID_ECDSA_FREEDOM }}
